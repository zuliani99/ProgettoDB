from flask blog import bycript

role = Table ('role', metadata,
	Column('id', Integer, primary_key=True),
	Column('name', String(20), unique=True)
)

usersrole = Table('usersrole', metadata,
	Column('id', Integer, primary_key=True),
	Column('user_id', Integer, ForeignKey('users.id', ondelete='CASCADE'), nullable=False),
	Column('role_id', Integer, ForeignKey('role.id', ondelete='CASCADE'), nullable=False)
)
conn = engine.connect()
ins = role.insert()
conn.execute(ins, [
	{"name": "Admin"}, {"name": "Customer"}
])

ins = user.insert()
conn.execute(ins, [
	{"name": "Administrator", "email": "administrator@airport.com", "password": bcrypt.generate_password_hash("adminpassword123").decode('utf-8')}
])

result = conn.execute(select([users.c.id].where(users.c.name == "Administrator")).fetchone()
ins = usersrole.insert()
conn.execute(ins, [
	{"user_id": result[0], "role_id": 1}
])

conn.close()


# The Admin page requires an 'Admin' role.
    @app.route('/admin')
    @roles_required('Admin')    # Use of @roles_required decorator
    def admin_page():